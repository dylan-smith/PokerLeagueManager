# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src\PokerLeagueManager.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  MajorVersion: '0'
  MinorVersion: '1'

steps:
- task: PowerShell@2
  displayName: 'Version Assemblies'
  inputs:
    targetType: filePath
    filePath: ./deploy/VersionAssemblies.ps1
    arguments: '-MajorVersion $(MajorVersion) -MinorVersion $(MinorVersion) -BuildNumber $(Build.BuildNumber) -SourcesDir $(Build.SourcesDirectory) -Verbose'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: SonarCloud
    organization: 'dylan-smith41309'
    projectKey: pokerleaguemanager
    projectName: PokerLeagueManager

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: BatchScript@1
  displayName: 'Build Angular'
  inputs:
    filename: src/PokerLeagueManager.UI.Web/BuildAngular.bat

- task: Npm@1
  displayName: 'Run Jasmine Tests'
  inputs:
    command: custom
    workingDir: src/PokerLeagueManager.UI.Web/angular
    verbose: false
    customCommand: 'run test-prod'

- task: PublishTestResults@2
  displayName: 'Publish jasmine test results'
  inputs:
    testResultsFiles: '$(Build.SourcesDirectory)\src\PokerLeagueManager.UI.Web\angular\KarmaTestResults\**\test.xml'
    mergeTestResults: true
    testRunTitle: 'Jasmine Tests'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: 'Publish jasmine code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/src/PokerLeagueManager.UI.Web/angular/coverage/cobertura-coverage.xml'
    reportDirectory: '$(Build.SourcesDirectory)/src/PokerLeagueManager.UI.Web/angular/coverage'
    failIfCoverageEmpty: true
    
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
