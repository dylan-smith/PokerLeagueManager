resources:

- repo: self

  clean: true

queue:

  name: Hosted VS2017

  demands: 

  - Cmd

  - node.js

  - msbuild

  - visualstudio

  - vstest

  - java





#Your build definition references the ‘MajorVersion’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘MinorVersion’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildPlatform’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildPlatform’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

steps:

- task: schlumberger.chromium-build-tasks-Preview.chromium-task.chromium-task@0

  displayName: Download Chrome Headless

  enabled: false



- powershell: . 'deploy/VersionAssemblies.ps1' '-MajorVersion $(MajorVersion) -MinorVersion $(MinorVersion) -BuildNumber $(Build.BuildNumber) -SourcesDir $(Build.SourcesDirectory) -Verbose' 

  displayName: Version Assemblies



- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1

  displayName: Prepare analysis on SonarCloud

  inputs:

    SonarCloud: SonarCloud

    organization: 'dysmith-microsoft-com-microsoft'

    projectKey: pokerleaguemanager

    projectName: PokerLeagueManager



- task: NuGetCommand@2

  displayName: NuGet Restore

  inputs:

    restoreSolution: 'src/PokerLeagueManager.sln'



- task: BatchScript@1

  displayName: Build Angular

  inputs:

    filename: 'src/PokerLeagueManager.UI.Web/BuildAngular.bat'



- task: whitesource.ws-bolt.bolt.wss.WhiteSource Bolt@1

  displayName: WhiteSource Bolt

  enabled: false



- task: whitesource.whitesource.task-hash-collector.WhiteSource@18

  displayName: WhiteSource 

  inputs:

    productNameOrToken: PokerLeagueManager

    projectToken: PokerLeagueManager

    forceCheckAllDependencies: true

    forceUpdate: true

    WhiteSourceService: Whitesource



- task: Npm@1

  displayName: ng test

  inputs:

    command: custom

    workingDir: 'src/PokerLeagueManager.UI.Web/angular'

    verbose: false

    customCommand: 'run test-prod'

  enabled: false



- task: PublishTestResults@2

  displayName: Publish ng test results

  inputs:

    testResultsFiles: '$(Build.SourcesDirectory)\src\PokerLeagueManager.UI.Web\angular\KarmaTestResults\**\test.xml'

    mergeTestResults: true

    testRunTitle: 'Jasmine Tests'

  condition: succeededOrFailed()



- task: VSBuild@1

  displayName: Build Solution

  inputs:

    solution: 'src/PokerLeagueManager.sln'

    vsVersion: 15.0

    msbuildArgs: '/p:TreatWarningsAsErrors=true /p:RunCodeAnalysis=true /p:CodeAnalysisRuleSet="..\PokerLeagueManager.ruleset" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:ValidateArchitecture=true'

    platform: '$(BuildPlatform)'

    configuration: '$(BuildConfiguration)'

    clean: true



- task: VSTest@2

  displayName: Run Unit Tests

  inputs:

    testAssemblyVer2: |
     **\*test*.dll
     !**\obj\**

    vsTestVersion: 15.0

    runInParallel: true

    codeCoverageEnabled: true

    platform: '$(BuildPlatform)'

    configuration: '$(BuildConfiguration)'



- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1

  displayName: Run Code Analysis



- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1

  displayName: Publish Analysis Result



- task: CopyFiles@2

  displayName: Copy DB.EventStore to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.DB.EventStore\bin\$(BuildConfiguration)'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.DB.EventStore'



- task: CopyFiles@2

  displayName: Copy DB.QueryStore to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.DB.QueryStore\bin\$(BuildConfiguration)'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.DB.QueryStore'



- task: CopyFiles@2

  displayName: Copy Commands.WebApi to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.Commands.WebApi\obj\$(BuildConfiguration)\Package'

    Contents: '*'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.Commands.WebApi'



- task: CopyFiles@2

  displayName: Copy Queries.WebApi to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.Queries.WebApi\obj\$(BuildConfiguration)\Package'

    Contents: '*'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.Queries.WebApi'



- task: CopyFiles@2

  displayName: Copy Events.WebApi to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.Events.WebApi\obj\$(BuildConfiguration)\Package'

    Contents: '*'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.Events.WebApi'



- task: CopyFiles@2

  displayName: Copy UI.Web to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.UI.Web\obj\$(BuildConfiguration)\Package'

    Contents: '*'

    TargetFolder: '$(build.StagingDirectory)\PokerLeagueManager.UI.Web'



- task: CopyFiles@2

  displayName: Copy deploy scripts to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\deploy'

    TargetFolder: '$(build.StagingDirectory)\deploy'



- task: CopyFiles@2

  displayName: Copy Utilities to Drop

  inputs:

    SourceFolder: '$(build.SourcesDirectory)\src\PokerLeagueManager.Utilities\bin\$(BuildConfiguration)'

    TargetFolder: '$(build.StagingDirectory)\Deploy\Utilities'



- task: PublishBuildArtifacts@1

  displayName: Publish Artifact: drop

  inputs:

    PathtoPublish: '$(build.artifactstagingdirectory)'

    ArtifactName: drop

    publishLocation: Container

  condition: succeededOrFailed()




